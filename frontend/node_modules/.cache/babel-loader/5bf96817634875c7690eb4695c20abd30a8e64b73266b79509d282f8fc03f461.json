{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\Website Learners Assignment\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport Header from \"./Header\";\nimport StatsCards from \"./StatsCards\";\nimport MedicationList from \"./MedicationList\";\nimport AddMedicationModal from \"./AddMedicationModal\";\nimport { medicationAPI, dashboardAPI } from \"../../services/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport ErrorMessage from \"../UI/ErrorMessage\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [medications, setMedications] = useState([]);\n  const [stats, setStats] = useState({\n    totalMedications: 0,\n    takenToday: 0,\n    adherenceRate: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showAddModal, setShowAddModal] = useState(false);\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n  const loadDashboardData = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      const [medicationsData, statsData] = await Promise.all([medicationAPI.getMedications(), dashboardAPI.getStats()]);\n      setMedications(medicationsData);\n      setStats(statsData);\n    } catch (err) {\n      setError(\"Failed to load dashboard data\");\n      console.error(\"Dashboard error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddMedication = async medicationData => {\n    try {\n      const newMedication = await medicationAPI.addMedication(medicationData);\n      setMedications(prev => [newMedication, ...prev]);\n      setStats(prev => ({\n        ...prev,\n        totalMedications: prev.totalMedications + 1\n      }));\n      setShowAddModal(false);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      throw new Error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Failed to add medication\");\n    }\n  };\n  const handleMarkAsTaken = async medicationId => {\n    try {\n      const today = new Date().toISOString().split(\"T\")[0];\n      await medicationAPI.markAsTaken(medicationId, today);\n\n      // Refresh stats\n      const updatedStats = await dashboardAPI.getStats();\n      setStats(updatedStats);\n    } catch (err) {\n      setError(\"Failed to mark medication as taken\");\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Welcome back, \", user.username, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dashboard-subtitle\",\n            children: \"Here's your medication overview for today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          message: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StatsCards, {\n          stats: stats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Your Medications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => setShowAddModal(true),\n              children: \"Add Medication\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MedicationList, {\n            medications: medications,\n            onMarkAsTaken: handleMarkAsTaken\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), showAddModal && /*#__PURE__*/_jsxDEV(AddMedicationModal, {\n      onClose: () => setShowAddModal(false),\n      onAdd: handleAddMedication\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"j9JgLKeotpR2Wu1wDtEL10RiXRQ=\", false, function () {\n  return [useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useAuth","Header","StatsCards","MedicationList","AddMedicationModal","medicationAPI","dashboardAPI","LoadingSpinner","ErrorMessage","jsxDEV","_jsxDEV","Dashboard","user","medications","setMedications","stats","setStats","totalMedications","takenToday","adherenceRate","loading","setLoading","error","setError","showAddModal","setShowAddModal","loadDashboardData","medicationsData","statsData","Promise","all","getMedications","getStats","err","console","handleAddMedication","medicationData","newMedication","addMedication","prev","_err$response","_err$response$data","Error","response","data","handleMarkAsTaken","medicationId","today","Date","toISOString","split","markAsTaken","updatedStats","fileName","lineNumber","columnNumber","className","children","username","message","onClick","onMarkAsTaken","onClose","onAdd","_c","$RefreshReg$"],"sources":["D:/Website Learners Assignment/frontend/src/components/Dashboard/Dashboard.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport Header from \"./Header\";\r\nimport StatsCards from \"./StatsCards\";\r\nimport MedicationList from \"./MedicationList\";\r\nimport AddMedicationModal from \"./AddMedicationModal\";\r\nimport { medicationAPI, dashboardAPI } from \"../../services/api\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport ErrorMessage from \"../UI/ErrorMessage\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction Dashboard() {\r\n  const { user } = useAuth();\r\n  const [medications, setMedications] = useState([]);\r\n  const [stats, setStats] = useState({\r\n    totalMedications: 0,\r\n    takenToday: 0,\r\n    adherenceRate: 0,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n  }, []);\r\n\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n\r\n      const [medicationsData, statsData] = await Promise.all([\r\n        medicationAPI.getMedications(),\r\n        dashboardAPI.getStats(),\r\n      ]);\r\n\r\n      setMedications(medicationsData);\r\n      setStats(statsData);\r\n    } catch (err) {\r\n      setError(\"Failed to load dashboard data\");\r\n      console.error(\"Dashboard error:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddMedication = async (medicationData) => {\r\n    try {\r\n      const newMedication = await medicationAPI.addMedication(medicationData);\r\n      setMedications((prev) => [newMedication, ...prev]);\r\n      setStats((prev) => ({\r\n        ...prev,\r\n        totalMedications: prev.totalMedications + 1,\r\n      }));\r\n      setShowAddModal(false);\r\n    } catch (err) {\r\n      throw new Error(err.response?.data?.error || \"Failed to add medication\");\r\n    }\r\n  };\r\n\r\n  const handleMarkAsTaken = async (medicationId) => {\r\n    try {\r\n      const today = new Date().toISOString().split(\"T\")[0];\r\n      await medicationAPI.markAsTaken(medicationId, today);\r\n\r\n      // Refresh stats\r\n      const updatedStats = await dashboardAPI.getStats();\r\n      setStats(updatedStats);\r\n    } catch (err) {\r\n      setError(\"Failed to mark medication as taken\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Header user={user} />\r\n\r\n      <main className=\"dashboard-main\">\r\n        <div className=\"dashboard-container\">\r\n          <div className=\"dashboard-header\">\r\n            <h1>Welcome back, {user.username}!</h1>\r\n            <p className=\"dashboard-subtitle\">\r\n              Here's your medication overview for today\r\n            </p>\r\n          </div>\r\n\r\n          {error && <ErrorMessage message={error} />}\r\n\r\n          <StatsCards stats={stats} />\r\n\r\n          <div className=\"dashboard-section\">\r\n            <div className=\"section-header\">\r\n              <h2>Your Medications</h2>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => setShowAddModal(true)}\r\n              >\r\n                Add Medication\r\n              </button>\r\n            </div>\r\n\r\n            <MedicationList\r\n              medications={medications}\r\n              onMarkAsTaken={handleMarkAsTaken}\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n      {showAddModal && (\r\n        <AddMedicationModal\r\n          onClose={() => setShowAddModal(false)}\r\n          onAdd={handleAddMedication}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}