{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\Website Learners Assignment\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport Header from \"./Header\";\nimport StatsCards from \"./StatsCards\";\nimport MedicationList from \"./MedicationList\";\nimport AddMedicationModal from \"./AddMedicationModal\";\nimport EditMedicationModal from \"./EditMedicationModal\";\nimport MedicationDetailsModal from \"./MedicationDetailsModal\";\nimport PhotoUploadModal from \"./PhotoUploadModal\";\nimport socketService from \"../../services/socket\";\nimport { medicationAPI, dashboardAPI } from \"../../services/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport ErrorMessage from \"../UI/ErrorMessage\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientDashboard() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [medications, setMedications] = useState([]);\n  const [stats, setStats] = useState({\n    totalMedications: 0,\n    takenToday: 0,\n    adherenceRate: 0,\n    streak: 0\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\n  const [showPhotoModal, setShowPhotoModal] = useState(false);\n  const [selectedMedication, setSelectedMedication] = useState(null);\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    loadDashboardData();\n\n    // Set up socket listeners for patient-specific events\n    const medicationAddedListener = socketService.on(\"medication_added\", medication => {\n      setMedications(prev => [medication, ...prev]);\n      setStats(prev => ({\n        ...prev,\n        totalMedications: prev.totalMedications + 1\n      }));\n      addNotification(`Medication ${medication.name} added successfully`);\n    });\n    const medicationUpdatedListener = socketService.on(\"medication_updated\", medication => {\n      setMedications(prev => prev.map(med => med.id === medication.id ? {\n        ...med,\n        ...medication\n      } : med));\n      addNotification(`Medication ${medication.name} updated successfully`);\n    });\n    const medicationDeletedListener = socketService.on(\"medication_deleted\", data => {\n      setMedications(prev => prev.filter(med => med.id !== data.id));\n      setStats(prev => ({\n        ...prev,\n        totalMedications: prev.totalMedications - 1\n      }));\n      addNotification(\"Medication deleted successfully\");\n    });\n    const medicationTakenListener = socketService.on(\"medication_taken\", data => {\n      loadDashboardData();\n      addNotification(`Medication ${data.medication_name} marked as taken`);\n    });\n    const medicationTakenByCaretakerListener = socketService.on(\"medication_taken_by_caretaker\", data => {\n      loadDashboardData();\n      addNotification(`${data.caretaker_username} marked ${data.medication_name} as taken for you`);\n    });\n    const caretakerAddedListener = socketService.on(\"caretaker_added\", data => {\n      addNotification(`${data.caretaker_username} is now your caretaker`);\n    });\n    return () => {\n      medicationAddedListener();\n      medicationUpdatedListener();\n      medicationDeletedListener();\n      medicationTakenListener();\n      medicationTakenByCaretakerListener();\n      caretakerAddedListener();\n    };\n  }, []);\n  const loadDashboardData = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      const [medicationsData, statsData] = await Promise.all([medicationAPI.getMedications(), dashboardAPI.getStats()]);\n      setMedications(medicationsData);\n      setStats(statsData);\n    } catch (err) {\n      setError(\"Failed to load dashboard data\");\n      console.error(\"Dashboard error:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddMedication = async medicationData => {\n    try {\n      const newMedication = await medicationAPI.addMedication(medicationData);\n      setMedications(prev => [newMedication, ...prev]);\n      setStats(prev => ({\n        ...prev,\n        totalMedications: prev.totalMedications + 1\n      }));\n      setShowAddModal(false);\n      addNotification(`Medication ${medicationData.name} added successfully`);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      throw new Error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Failed to add medication\");\n    }\n  };\n  const handleEditMedication = async medicationData => {\n    try {\n      const updatedMedication = await medicationAPI.updateMedication(selectedMedication.id, medicationData);\n      setMedications(prev => prev.map(med => med.id === selectedMedication.id ? {\n        ...med,\n        ...updatedMedication\n      } : med));\n      setShowEditModal(false);\n      setSelectedMedication(null);\n      addNotification(`Medication ${medicationData.name} updated successfully`);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      throw new Error(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || \"Failed to update medication\");\n    }\n  };\n  const handleDeleteMedication = async medicationId => {\n    try {\n      await medicationAPI.deleteMedication(medicationId);\n      setMedications(prev => prev.filter(med => med.id !== medicationId));\n      setStats(prev => ({\n        ...prev,\n        totalMedications: prev.totalMedications - 1\n      }));\n      setShowDetailsModal(false);\n      setSelectedMedication(null);\n      addNotification(\"Medication deleted successfully\");\n    } catch (err) {\n      setError(\"Failed to delete medication\");\n    }\n  };\n  const handleMarkAsTaken = async (medicationId, photo = null) => {\n    try {\n      const today = new Date().toISOString().split(\"T\")[0];\n      await medicationAPI.markAsTaken(medicationId, today, photo);\n\n      // Refresh stats\n      const updatedStats = await dashboardAPI.getStats();\n      setStats(updatedStats);\n      const medication = medications.find(med => med.id === medicationId);\n      addNotification(`${medication.name} marked as taken`);\n    } catch (err) {\n      setError(\"Failed to mark medication as taken\");\n    }\n  };\n  const handleMarkAsTakenWithPhoto = medication => {\n    setSelectedMedication(medication);\n    setShowPhotoModal(true);\n  };\n  const handlePhotoUpload = async photo => {\n    try {\n      await handleMarkAsTaken(selectedMedication.id, photo);\n      setShowPhotoModal(false);\n      setSelectedMedication(null);\n    } catch (err) {\n      throw new Error(\"Failed to mark medication as taken with photo\");\n    }\n  };\n  const handleViewDetails = medication => {\n    setSelectedMedication(medication);\n    setShowDetailsModal(true);\n  };\n  const handleEditClick = medication => {\n    setSelectedMedication(medication);\n    setShowEditModal(true);\n  };\n  const addNotification = message => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, {\n      id,\n      message\n    }]);\n\n    // Auto-remove notification after 5 seconds\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(notification => notification.id !== id));\n    }, 5000);\n  };\n  const removeNotification = id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Welcome back, \", user.username, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"dashboard-subtitle\",\n            children: \"Here's your medication overview for today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          message: error,\n          onClose: () => setError(\"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-container\",\n          children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: notification.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"notification-close\",\n              onClick: () => removeNotification(notification.id),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StatsCards, {\n          stats: stats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-actions\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/analytics\",\n            className: \"btn btn-secondary\",\n            children: \"\\uD83D\\uDCCA View Adherence Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Your Medications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => setShowAddModal(true),\n              children: \"\\u2795 Add Medication\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MedicationList, {\n            medications: medications,\n            onMarkAsTaken: handleMarkAsTaken,\n            onMarkAsTakenWithPhoto: handleMarkAsTakenWithPhoto,\n            onViewDetails: handleViewDetails,\n            onEdit: handleEditClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), showAddModal && /*#__PURE__*/_jsxDEV(AddMedicationModal, {\n      onClose: () => setShowAddModal(false),\n      onAdd: handleAddMedication\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this), showEditModal && selectedMedication && /*#__PURE__*/_jsxDEV(EditMedicationModal, {\n      medication: selectedMedication,\n      onClose: () => {\n        setShowEditModal(false);\n        setSelectedMedication(null);\n      },\n      onEdit: handleEditMedication\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), showDetailsModal && selectedMedication && /*#__PURE__*/_jsxDEV(MedicationDetailsModal, {\n      medication: selectedMedication,\n      onClose: () => {\n        setShowDetailsModal(false);\n        setSelectedMedication(null);\n      },\n      onDelete: handleDeleteMedication\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this), showPhotoModal && selectedMedication && /*#__PURE__*/_jsxDEV(PhotoUploadModal, {\n      medication: selectedMedication,\n      onClose: () => {\n        setShowPhotoModal(false);\n        setSelectedMedication(null);\n      },\n      onUpload: handlePhotoUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientDashboard, \"p5N3VTndUZ7ALKQjwnlC3RUHm7g=\", false, function () {\n  return [useAuth];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","Link","useAuth","Header","StatsCards","MedicationList","AddMedicationModal","EditMedicationModal","MedicationDetailsModal","PhotoUploadModal","socketService","medicationAPI","dashboardAPI","LoadingSpinner","ErrorMessage","jsxDEV","_jsxDEV","PatientDashboard","user","medications","setMedications","stats","setStats","totalMedications","takenToday","adherenceRate","streak","loading","setLoading","error","setError","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showDetailsModal","setShowDetailsModal","showPhotoModal","setShowPhotoModal","selectedMedication","setSelectedMedication","notifications","setNotifications","loadDashboardData","medicationAddedListener","on","medication","prev","addNotification","name","medicationUpdatedListener","map","med","id","medicationDeletedListener","data","filter","medicationTakenListener","medication_name","medicationTakenByCaretakerListener","caretaker_username","caretakerAddedListener","medicationsData","statsData","Promise","all","getMedications","getStats","err","console","handleAddMedication","medicationData","newMedication","addMedication","_err$response","_err$response$data","Error","response","handleEditMedication","updatedMedication","updateMedication","_err$response2","_err$response2$data","handleDeleteMedication","medicationId","deleteMedication","handleMarkAsTaken","photo","today","Date","toISOString","split","markAsTaken","updatedStats","find","handleMarkAsTakenWithPhoto","handlePhotoUpload","handleViewDetails","handleEditClick","message","now","setTimeout","notification","removeNotification","fileName","lineNumber","columnNumber","className","children","username","onClose","length","onClick","to","onMarkAsTaken","onMarkAsTakenWithPhoto","onViewDetails","onEdit","onAdd","onDelete","onUpload","_c","$RefreshReg$"],"sources":["D:/Website Learners Assignment/frontend/src/components/Dashboard/PatientDashboard.js"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport Header from \"./Header\";\r\nimport StatsCards from \"./StatsCards\";\r\nimport MedicationList from \"./MedicationList\";\r\nimport AddMedicationModal from \"./AddMedicationModal\";\r\nimport EditMedicationModal from \"./EditMedicationModal\";\r\nimport MedicationDetailsModal from \"./MedicationDetailsModal\";\r\nimport PhotoUploadModal from \"./PhotoUploadModal\";\r\nimport socketService from \"../../services/socket\";\r\nimport { medicationAPI, dashboardAPI } from \"../../services/api\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport ErrorMessage from \"../UI/ErrorMessage\";\r\nimport \"./Dashboard.css\";\r\n\r\nfunction PatientDashboard() {\r\n  const { user } = useAuth();\r\n  const [medications, setMedications] = useState([]);\r\n  const [stats, setStats] = useState({\r\n    totalMedications: 0,\r\n    takenToday: 0,\r\n    adherenceRate: 0,\r\n    streak: 0,\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\r\n  const [showPhotoModal, setShowPhotoModal] = useState(false);\r\n  const [selectedMedication, setSelectedMedication] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadDashboardData();\r\n\r\n    // Set up socket listeners for patient-specific events\r\n    const medicationAddedListener = socketService.on(\r\n      \"medication_added\",\r\n      (medication) => {\r\n        setMedications((prev) => [medication, ...prev]);\r\n        setStats((prev) => ({\r\n          ...prev,\r\n          totalMedications: prev.totalMedications + 1,\r\n        }));\r\n        addNotification(`Medication ${medication.name} added successfully`);\r\n      }\r\n    );\r\n\r\n    const medicationUpdatedListener = socketService.on(\r\n      \"medication_updated\",\r\n      (medication) => {\r\n        setMedications((prev) =>\r\n          prev.map((med) =>\r\n            med.id === medication.id ? { ...med, ...medication } : med\r\n          )\r\n        );\r\n        addNotification(`Medication ${medication.name} updated successfully`);\r\n      }\r\n    );\r\n\r\n    const medicationDeletedListener = socketService.on(\r\n      \"medication_deleted\",\r\n      (data) => {\r\n        setMedications((prev) => prev.filter((med) => med.id !== data.id));\r\n        setStats((prev) => ({\r\n          ...prev,\r\n          totalMedications: prev.totalMedications - 1,\r\n        }));\r\n        addNotification(\"Medication deleted successfully\");\r\n      }\r\n    );\r\n\r\n    const medicationTakenListener = socketService.on(\r\n      \"medication_taken\",\r\n      (data) => {\r\n        loadDashboardData();\r\n        addNotification(`Medication ${data.medication_name} marked as taken`);\r\n      }\r\n    );\r\n\r\n    const medicationTakenByCaretakerListener = socketService.on(\r\n      \"medication_taken_by_caretaker\",\r\n      (data) => {\r\n        loadDashboardData();\r\n        addNotification(\r\n          `${data.caretaker_username} marked ${data.medication_name} as taken for you`\r\n        );\r\n      }\r\n    );\r\n\r\n    const caretakerAddedListener = socketService.on(\r\n      \"caretaker_added\",\r\n      (data) => {\r\n        addNotification(`${data.caretaker_username} is now your caretaker`);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      medicationAddedListener();\r\n      medicationUpdatedListener();\r\n      medicationDeletedListener();\r\n      medicationTakenListener();\r\n      medicationTakenByCaretakerListener();\r\n      caretakerAddedListener();\r\n    };\r\n  }, []);\r\n\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(\"\");\r\n\r\n      const [medicationsData, statsData] = await Promise.all([\r\n        medicationAPI.getMedications(),\r\n        dashboardAPI.getStats(),\r\n      ]);\r\n\r\n      setMedications(medicationsData);\r\n      setStats(statsData);\r\n    } catch (err) {\r\n      setError(\"Failed to load dashboard data\");\r\n      console.error(\"Dashboard error:\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddMedication = async (medicationData) => {\r\n    try {\r\n      const newMedication = await medicationAPI.addMedication(medicationData);\r\n      setMedications((prev) => [newMedication, ...prev]);\r\n      setStats((prev) => ({\r\n        ...prev,\r\n        totalMedications: prev.totalMedications + 1,\r\n      }));\r\n      setShowAddModal(false);\r\n      addNotification(`Medication ${medicationData.name} added successfully`);\r\n    } catch (err) {\r\n      throw new Error(err.response?.data?.error || \"Failed to add medication\");\r\n    }\r\n  };\r\n\r\n  const handleEditMedication = async (medicationData) => {\r\n    try {\r\n      const updatedMedication = await medicationAPI.updateMedication(\r\n        selectedMedication.id,\r\n        medicationData\r\n      );\r\n      setMedications((prev) =>\r\n        prev.map((med) =>\r\n          med.id === selectedMedication.id\r\n            ? { ...med, ...updatedMedication }\r\n            : med\r\n        )\r\n      );\r\n      setShowEditModal(false);\r\n      setSelectedMedication(null);\r\n      addNotification(`Medication ${medicationData.name} updated successfully`);\r\n    } catch (err) {\r\n      throw new Error(\r\n        err.response?.data?.error || \"Failed to update medication\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDeleteMedication = async (medicationId) => {\r\n    try {\r\n      await medicationAPI.deleteMedication(medicationId);\r\n      setMedications((prev) => prev.filter((med) => med.id !== medicationId));\r\n      setStats((prev) => ({\r\n        ...prev,\r\n        totalMedications: prev.totalMedications - 1,\r\n      }));\r\n      setShowDetailsModal(false);\r\n      setSelectedMedication(null);\r\n      addNotification(\"Medication deleted successfully\");\r\n    } catch (err) {\r\n      setError(\"Failed to delete medication\");\r\n    }\r\n  };\r\n\r\n  const handleMarkAsTaken = async (medicationId, photo = null) => {\r\n    try {\r\n      const today = new Date().toISOString().split(\"T\")[0];\r\n      await medicationAPI.markAsTaken(medicationId, today, photo);\r\n\r\n      // Refresh stats\r\n      const updatedStats = await dashboardAPI.getStats();\r\n      setStats(updatedStats);\r\n\r\n      const medication = medications.find((med) => med.id === medicationId);\r\n      addNotification(`${medication.name} marked as taken`);\r\n    } catch (err) {\r\n      setError(\"Failed to mark medication as taken\");\r\n    }\r\n  };\r\n\r\n  const handleMarkAsTakenWithPhoto = (medication) => {\r\n    setSelectedMedication(medication);\r\n    setShowPhotoModal(true);\r\n  };\r\n\r\n  const handlePhotoUpload = async (photo) => {\r\n    try {\r\n      await handleMarkAsTaken(selectedMedication.id, photo);\r\n      setShowPhotoModal(false);\r\n      setSelectedMedication(null);\r\n    } catch (err) {\r\n      throw new Error(\"Failed to mark medication as taken with photo\");\r\n    }\r\n  };\r\n\r\n  const handleViewDetails = (medication) => {\r\n    setSelectedMedication(medication);\r\n    setShowDetailsModal(true);\r\n  };\r\n\r\n  const handleEditClick = (medication) => {\r\n    setSelectedMedication(medication);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const addNotification = (message) => {\r\n    const id = Date.now();\r\n    setNotifications((prev) => [...prev, { id, message }]);\r\n\r\n    // Auto-remove notification after 5 seconds\r\n    setTimeout(() => {\r\n      setNotifications((prev) =>\r\n        prev.filter((notification) => notification.id !== id)\r\n      );\r\n    }, 5000);\r\n  };\r\n\r\n  const removeNotification = (id) => {\r\n    setNotifications((prev) =>\r\n      prev.filter((notification) => notification.id !== id)\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Header user={user} />\r\n\r\n      <main className=\"dashboard-main\">\r\n        <div className=\"dashboard-container\">\r\n          <div className=\"dashboard-header\">\r\n            <h1>Welcome back, {user.username}!</h1>\r\n            <p className=\"dashboard-subtitle\">\r\n              Here's your medication overview for today\r\n            </p>\r\n          </div>\r\n\r\n          {error && (\r\n            <ErrorMessage message={error} onClose={() => setError(\"\")} />\r\n          )}\r\n\r\n          {notifications.length > 0 && (\r\n            <div className=\"notifications-container\">\r\n              {notifications.map((notification) => (\r\n                <div key={notification.id} className=\"notification\">\r\n                  <span>{notification.message}</span>\r\n                  <button\r\n                    className=\"notification-close\"\r\n                    onClick={() => removeNotification(notification.id)}\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <StatsCards stats={stats} />\r\n\r\n          <div className=\"dashboard-actions\">\r\n            <Link to=\"/analytics\" className=\"btn btn-secondary\">\r\n              📊 View Adherence Analytics\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"dashboard-section\">\r\n            <div className=\"section-header\">\r\n              <h2>Your Medications</h2>\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => setShowAddModal(true)}\r\n              >\r\n                ➕ Add Medication\r\n              </button>\r\n            </div>\r\n\r\n            <MedicationList\r\n              medications={medications}\r\n              onMarkAsTaken={handleMarkAsTaken}\r\n              onMarkAsTakenWithPhoto={handleMarkAsTakenWithPhoto}\r\n              onViewDetails={handleViewDetails}\r\n              onEdit={handleEditClick}\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n\r\n      {showAddModal && (\r\n        <AddMedicationModal\r\n          onClose={() => setShowAddModal(false)}\r\n          onAdd={handleAddMedication}\r\n        />\r\n      )}\r\n\r\n      {showEditModal && selectedMedication && (\r\n        <EditMedicationModal\r\n          medication={selectedMedication}\r\n          onClose={() => {\r\n            setShowEditModal(false);\r\n            setSelectedMedication(null);\r\n          }}\r\n          onEdit={handleEditMedication}\r\n        />\r\n      )}\r\n\r\n      {showDetailsModal && selectedMedication && (\r\n        <MedicationDetailsModal\r\n          medication={selectedMedication}\r\n          onClose={() => {\r\n            setShowDetailsModal(false);\r\n            setSelectedMedication(null);\r\n          }}\r\n          onDelete={handleDeleteMedication}\r\n        />\r\n      )}\r\n\r\n      {showPhotoModal && selectedMedication && (\r\n        <PhotoUploadModal\r\n          medication={selectedMedication}\r\n          onClose={() => {\r\n            setShowPhotoModal(false);\r\n            setSelectedMedication(null);\r\n          }}\r\n          onUpload={handlePhotoUpload}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}